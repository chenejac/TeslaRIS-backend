name: Java CI with Maven

on:
    push:
    pull_request:
        branches: ["main"]
        # Don't run if PR is only updating static documentation
        paths-ignore:
            - "**/*.md"
            - "**/*.txt"

jobs:
    setup-services:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:13.3
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: TeslaRISDB
                ports:
                    - 5432:5432
            elasticsearch:
                image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
                env:
                    discovery.type: single-node
                    ES_JAVA_OPTS: -Xms1g -Xmx1g
                    xpack.security.enabled: false
                ports:
                    - 9200:9200
        steps:
            - name: Start Docker Compose
              run: docker-compose up -ds
            - name: Wait for services to be available
              run: |
                  until pg_isready -h localhost -p 5432; do
                      echo "Waiting for PostgreSQL to start...";
                      sleep 1;
                  done;
                  until curl -XGET -u elastic:changeme http://localhost:9200/; do
                      echo "Waiting for Elasticsearch to start...";
                      sleep 1;
                  done;
    build-test-analyze:
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write

        # services:
        #     postgres:
        #         image: postgres:13.3
        #         env:
        #             POSTGRES_PASSWORD: postgres
        #             POSTGRES_USER: postgres
        #             POSTGRES_DB: TeslaRISDB
        #         ports:
        #             - 5432:5432
        #     elasticsearch:
        #         image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        #         env:
        #             discovery.type: single-node
        #             ES_JAVA_OPTS: -Xms1g -Xmx1g
        #             xpack.security.enabled: false
        #         ports:
        #             - 9200:9200

        steps:
            - uses: actions/checkout@v3

            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: "11"
                  distribution: "temurin"
                  cache: maven

            # - name: Start Docker Compose
            #   run: docker-compose up -ds

            - name: Build with Maven
              run: mvn -B package -DskipTests --file pom.xml
              env:
                  DB_PASSWORD: postgres

            - name: Run Tests
              run: mvn test
              env:
                  DB_PASSWORD: postgres
            # Initializes the CodeQL tools for scanning.
            # https://github.com/github/codeql-action
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v2
              with:
                  languages: java

            # Autobuild attempts to build any compiled languages
            - name: Autobuild
              uses: github/codeql-action/autobuild@v2

            # Perform GitHub Code Scanning.
            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v2

            # - name: Stop Docker Compose
            #   run: docker-compose down

            - name: Generate Checkstyle Report
              run: mvn checkstyle:checkstyle
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
